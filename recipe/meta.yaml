{% set name = "natsort" %}
{% set version = "8.4.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 45312c4a0e5507593da193dedd04abb1469253b601ecaf63445ad80f0a1ea581

build:
  number: 0
  skip: true  # [py<37]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation --ignore-installed --no-cache-dir -vv
  entry_points:
    - natsort = natsort.__main__:main

requirements:
  host:
    - python
    - pip
    - setuptools
    - wheel
  run:
    - python

# =======================
# Test configuration
# =======================
{% set test_root = "tests" %}

# - test_string_component_transform_factory: runtime crush
# - other: unsupported locale setting (osx)
{% set skip_files = [
    "tests/test_string_component_transform_factory.py",
] %}

# - test_missing_unicode_number_in_collection: runtime crush
# - other tests: unsupported locale setting (osx)
{% set skip_keywords = [
    "test_missing_unicode_number_in_collection",
    "test_natsorted_can_sort_using_locale",
    "test_natsorted_can_sort_locale_specific_numbers_en",
    "test_natsorted_can_sort_locale_specific_numbers_de",
    "test_natsorted_locale_bug_regression_test_109",
    "test_natsorted_locale_bug_regression_test_140",
    "test_natsorted_handles_mixed_types_with_locale",
    "with_locale_en_us",
    "with_locale_de_de",
    "with_locale_cs_cz",
    "test_humansorted_is_identical_to_natsorted_with_locale_alg",
    "test_index_humansorted_is_identical_to_index_natsorted_with_locale_alg",
    "test_final_data_transform_factory_default",
    "test_final_data_transform_factory_ungroup_and_locale",
    "test_natsort_keygen_with_locale",
    "test_natsort_keygen_with_locale_bytes",
    "test_parse_string_factory_invariance",
    "test_input_string_transform_factory_cleans_thousands",
    "test_input_string_transform_factory_handles_us_locale",
    "test_input_string_transform_factory_handles_de_locale",
    "test_input_string_transform_factory_handles_german_locale",
    "test_input_string_transform_factory_does_nothing_with_non_num_input",
    "test_os_sorted_corpus",
    "test_string_component_transform_factory"
] %}

test:
  requires:
    - pip
    - pytest
    - pytest-cov
    - pytest-mock
    - hypothesis
    - typing_extensions
  source_files:
    - {{ test_root }}
  imports:
    - natsort
    - natsort.__main__
    - natsort.compat.fake_fastnumbers
    - natsort.compat.fastnumbers
    - natsort.compat.locale
    - natsort.natsort
    - natsort.ns_enum
    - natsort.unicode_numbers
    - natsort.unicode_numeric_hex
    - natsort.utils
  commands:
    - pip check
    - pytest -v {{ test_root }}{% for file in skip_files %} --ignore={{ file }}{% endfor %} -k "not ({{ skip_keywords | join(' or ') }})" --tb=short --hypothesis-profile=slow-tests

about:
  home: https://github.com/SethMMorton/natsort
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Simple yet flexible natural sorting in Python
  description: |
    natsort is a general utility for sorting lists naturally either as numbers
    or as versions.
  doc_url: https://natsort.readthedocs.io/
  dev_url: https://github.com/SethMMorton/natsort

extra:
  recipe-maintainers:
    - holtgrewe
    - synapticarbors
